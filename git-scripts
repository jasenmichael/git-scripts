#!/bin/bash

set -e

GIT_SCRIPTS_BRANCH=${GIT_SCRIPTS_BRANCH:-main}
GIT_SCRIPTS_URL=${GIT_SCRIPTS_URL:-https://github.com/jasenmichael/git-scripts.git}
GIT_SCRIPTS_DIR=$HOME/.scripts

START_DIR=$(pwd)
trap 'cd $START_DIR' EXIT

help() {
  echo "git-scripts - A collection of useful Git scripts"
  echo
  echo "Usage: git-scripts [command]"
  echo
  echo "Commands:"
  echo "  ls, list         List all available scripts in $GIT_SCRIPTS_DIR"
  echo "  update           Update git-scripts to the latest version"
  echo "  <script-name>    Execute a specific script from the collection"
  echo
  echo "Options:"
  echo "  -h, --help       Show this help message"
  echo
  echo "Environment Variables:"
  echo "  GIT_SCRIPTS_BRANCH  Branch to install from (default: main)"
  echo "  GIT_SCRIPTS_URL     Repository URL (default: https://github.com/jasenmichael/git-scripts.git)"
  echo "  GIT_SCRIPTS_DIR     Installation directory (default: $HOME/.scripts)"
  echo
  echo "Note: After installation, please restart your shell to apply PATH changes."
}

# clones or pulls the latest git-scripts
install_latest() {
  if [ ! -d "$GIT_SCRIPTS_DIR" ]; then
    git clone "$GIT_SCRIPTS_URL" "$GIT_SCRIPTS_DIR"
  fi
  cd "$GIT_SCRIPTS_DIR" || exit 1

  # pull the latest changes
  git fetch origin && git reset --hard "origin/$GIT_SCRIPTS_BRANCH"

  # make all scripts executable
  chmod +x "$GIT_SCRIPTS_DIR/git-scripts"
  find "$GIT_SCRIPTS_DIR" -type f -name "*.sh" -exec chmod +x {} \;
}

# update the rc file to add the git-scripts directory to the PATH
update_rc() {
  # check if `# git-scripts` exists in ~/.bashrc or ~/.zshrc
  for rc in $HOME/.bashrc $HOME/.zshrc; do
    if ! grep -q "# git-scripts" "$rc"; then
      echo -e "\n\n# git-scripts\nexport PATH=\"\$PATH:\$HOME/.scripts\"" >>"$rc"
      sed -i '/./,/^$/!d' "$rc"
    fi
  done
}

# Executed remotely clones git-scripts to $GIT_SCRIPTS_DIR
# shellcheck disable=SC2128
if [ "$0" != "$BASH_SOURCE" ]; then
  install_latest
  update_rc
  echo "git-scripts installed and updated in $GIT_SCRIPTS_DIR"
  echo "Please restart your shell to apply the changes"
  exit 0
fi

while [[ $# -gt 0 ]]; do
  case $1 in
  -h | --help)
    help
    exit 0
    ;;
  ls | list)
    find "$GIT_SCRIPTS_DIR" -maxdepth 1 -name "*.sh" -printf "%f\n" | sed 's/\.sh$//'
    exit 0
    ;;
  update)
    install_latest
    update_rc
    exit 0
    ;;
  *)
    script="$1"
    shift
    "$GIT_SCRIPTS_DIR/$script.sh" "$@"
    exit 0
    ;;
  esac
done

# if no command is provided, show interactive menu
if [ $# -eq 0 ]; then
  # Get all available scripts
  # shellcheck disable=SC2207
  scripts=($(find "$GIT_SCRIPTS_DIR" -maxdepth 1 -name "*.sh" -printf "%f\n" | sed 's/\.sh$//'))
  selected=()

  echo "Select scripts to run (enter number to toggle, r to run selected, q to quit):"
  echo "----------------------------------------"

  while true; do
    clear
    # Show menu with current state
    for i in "${!scripts[@]}"; do
      check="[ ]"
      printf '%s\n' "${selected[@]}" | grep -q "^${scripts[$i]}$" && check="[X]"
      echo "$((i + 1)). $check ${scripts[$i]}"
    done
    echo "----------------------------------------"
    echo "Enter number to toggle, r to run selected, q to quit"

    read -r choice
    case $choice in
    [0-9]*)
      if [ "$choice" -gt 0 ] && [ "$choice" -le "${#scripts[@]}" ]; then
        script="${scripts[$((choice - 1))]}"
        if printf '%s\n' "${selected[@]}" | grep -q "^${script}$"; then
          selected=("${selected[@]/$script/}")
        else
          selected+=("$script")
        fi
      fi
      ;;
    [rR])
      if [ ${#selected[@]} -eq 0 ]; then
        echo "No scripts selected."
        sleep 1
      else
        clear
        for script in "${selected[@]}"; do
          if [ -n "$script" ]; then # Skip empty entries
            echo "----------------------------------------"
            echo "Running $script..."
            "$GIT_SCRIPTS_DIR/$script.sh"
            echo "----------------------------------------"
          fi
        done
        exit 0
      fi
      ;;
    [qQ])
      exit 0
      ;;
    esac
  done
fi
